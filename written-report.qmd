---
title: "Your project title"
author: "Team Name: Team member 1, Team member 2, Team member 3, Team member 4"
date: "Update date"
format: pdf
execute: 
  warning: false
  message: false
  echo: false
editor: visual
---

```{r warning = F, echo = F}
#| label: load packages and data
library(tidyverse)
library(tidymodels)
library(ggplot2)
library(dplyr)
library(patchwork)
pokemon <- read.csv("data/pokemon.csv")
```

# Introduction and Data:

The expansive world of Pokémon, at its core, is a children's game. However, a deeper look at the numbers and statistics the game is built from reveals several intricate relationships among the different pokémons' characteristics. Each creature has its own specific set of base statistics, colloquially referred to as "base stats," including attack, special attack, defense, special defense, and speed, which indicate that pokémon's battle prowess. Summing these stats yields a pokémon's total base stats, which is the best measure of a pokémon's overall strength when all pokémon are put at an even playing field -- common knowledge for any pokémon fan. We are interested in measuring a pokémon's strength without using base stats as predictors, giving us insight on how strong the relationships among pokémon's different characteristics actually are. Thus, we are looking to answer the following research question: **Can we predict a Pokémon's Base Stat Total from other variables?** In other words, we are analyzing how well variables such as the pokémon's type, capture rate, growth rate, generation, height, weight, base happiness, weaknesses, and if the pokemon is legendary or not can predict a pokémon's total base stats. We hypothesize that a multiple linear regression model including some formation of these predictor variables will be a somewhat strong predictor for base_total -- thinking about the game, stronger pokémon would seem to have certain values for these predictor variables when compared to weaker ones: for example, legendary pokémon tend to be stronger in battle than non legendary pokémon, so we might expect is_legendary to be a useful predictor for base_total, for example.

We retrieved the dataset from kaggle.com, a large data science online community, and the dataset is called ["The Complete Pokemon Dataset"](https://labs-az-08.oit.duke.edu:30269/#0) created by Rounak Banik in 2017. The dataset was retrieved via web scraper from the website serebii.net, an all-in-one, reliable data hub for all things pokemon in 2017. Since it was formed in 2017, the dataset does not include pokémon from more recent games, but still includes a whopping 801 pokémon, meaning the dataset has 801 observations, one for each pokémon.

The dataset contains 23 variables, taken directly from the kaggle website for the dataset, explanations of which can be viewed in our [data dictionary](./data/README.md). For our analysis, we will be focusing on these specific variables:

-   ADD VARIABLES HERE

As you'll notice, the dataset splits the base stats of each pokemon into the individual stats, but we only need to know about the base_total variable, which is included in the csv file. Each variable describes the pokémon at hand in a different way. Some, like is_legendary, may prove to be extremely important in our regression model, while with others, like name and Japanese name, we can remove them from consideration as they are simply unique identifiers.

```{r expdata1, warning = F, echo = F}
p1 <- ggplot(pokemon, aes(x = base_total)) +
  geom_histogram(binwidth = 10, fill = "blue", color = "black") +
  geom_vline(xintercept = mean(pokemon$base_total), color = "red", size = 1) +
  labs(title = "Distribution of Base Total", x = "Base Total")
```

```{r expdata3, warning = F, echo = F}
generation_means <- pokemon |>
  group_by(generation) |>
  summarise(mean_base_total = mean(base_total)) |>
  arrange(desc(mean_base_total))

p3 <- ggplot(generation_means, aes(x = as.factor(generation), y = mean_base_total)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  labs(title = "Mean Base Total Across Generations",
       x = "Generation",
       y = "Mean Base Total")
```

```{r expdata4, warning = F, echo = F}
p4 <- ggplot(pokemon, aes(x = weight_kg, y = base_total)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, col = "blue") +
  labs(title = "Scatter Plot of Base Total vs. Weight", x = "Weight (kg)", y = "Base Total")
```

```{r expdata6, warning = F, echo = F}
pokemon$is_legendary <- as.factor(pokemon$is_legendary)
p6 <- ggplot(pokemon, aes(x = weight_kg, y = base_total, color = is_legendary)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(title = "Interaction Between Weight and Legendary Status", x = "Weight (kg)", y = "Base Total")
```

```{r plots, message = F, warning = F, echo = F}
p1 <- p1 + theme(
  plot.title = element_text(size = rel(0.8)), # Adjust plot title size
  axis.title.x = element_text(size = rel(0.8)),     # X axis label
  axis.title.y = element_text(size = rel(0.8)),     # Y axis label
  axis.text.x = element_text(size = rel(0.8)),      # X axis text
  axis.text.y = element_text(size = rel(0.8)),      # Y axis text
  legend.title = element_text(size = rel(0.8)),     # Legend title
  legend.text = element_text(size = rel(0.8))       # Legend text
)

p3 <- p3 + theme(
  plot.title = element_text(size = rel(0.8)), # Adjust plot title size
  axis.title.x = element_text(size = rel(0.8)),     # X axis label
  axis.title.y = element_text(size = rel(0.8)),     # Y axis label
  axis.text.x = element_text(size = rel(0.8)),      # X axis text
  axis.text.y = element_text(size = rel(0.8)),      # Y axis text
  legend.title = element_text(size = rel(0.8)),     # Legend title
  legend.text = element_text(size = rel(0.8))       # Legend text
)

p4 <- p4 + theme(
  plot.title = element_text(size = rel(0.8)), # Adjust plot title size
  axis.title.x = element_text(size = rel(0.8)),     # X axis label
  axis.title.y = element_text(size = rel(0.8)),     # Y axis label
  axis.text.x = element_text(size = rel(0.8)),      # X axis text
  axis.text.y = element_text(size = rel(0.8)),      # Y axis text
  legend.title = element_text(size = rel(0.8)),     # Legend title
  legend.text = element_text(size = rel(0.8))       # Legend text
)

p6 <- p6 + theme(
  plot.title = element_text(size = rel(0.8)), # Adjust plot title size
  axis.title.x = element_text(size = rel(0.8)),     # X axis label
  axis.title.y = element_text(size = rel(0.8)),     # Y axis label
  axis.text.x = element_text(size = rel(0.8)),      # X axis text
  axis.text.y = element_text(size = rel(0.8)),      # Y axis text
  legend.title = element_text(size = rel(0.8)),     # Legend title
  legend.text = element_text(size = rel(0.8))       # Legend text
)


plot_combined <- (p1 | p3) /
(p4 | p6)

plot_final <- plot_combined + 
              plot_layout(widths = c(1, 1, 1), heights = c(1, 1))

plot_combined
```

```{r summaryTotal, message = F, warning = F, echo = F}
tidy(summary(pokemon$base_total))
```

**p1: Distribution of Base total:** We can see from the distribution of the base total, that is seems to be roughly trimodal with three peaks (one around 300, 400, and 475). The base total points vary from about 180 to 780 with a mean at around 428.4. The median is 435 which is higher than the mean by a little bit which could mean that there are more extreme low base total Pokemon bringing the mean down a little bit. The IQR is 185 (505 - 320) and looking at the data there might be a potential outlier around 780 base total.

**p2: Mean Base Total Across Generations:** This is the graph showing the relationship between different generation Pokemon and their mean base total. We can see from this graph that the mean base total of generation 4 Pokemon were the highest but overall we can't see any distinct relationships between the generation of the Pokemon and their mean base total. One can maybe say there could be a very slight positive linear relationship between the generation of the Pokemon and their mean base total as we obsere that as generation increases the mean base total tends to increase slightly.

**p3: Scatter Plot of Base Total vs Weight:** From the scatter plot I can see that there is no apparent correlation between the weight and the base total. There may be a very low positive correlation between these two variables but most of the points are focused around when the weight of the Pokemon is less than 100kg so it's hard to tell the relationship. There seems to be a few outliers near 900-1000kg.

**p4: Interaction Between Weight and Legendary Status:** This graph is showing the relationship between the weight of the Pokemon and the base total for legendary and non legendary Pokemon. The red line is for non legendary Pokemons (is_legendary = 0) and the blue line is for legendary Pokemon (is_legendary = 1). Something interesting we can note is that legendary Pokemon all tend to have a much higher and consistent base total for all weights. Across all weights most base total for legendary Pokemons stay between 550- 700. Among the legendary Pokemon there doesn't seem to be any correlation between the weight and the base total. Among the non-legendary Pokemon however, there seems to be a very slight positive correlation between the weight of the Pokemon and the base total. As the weight of the non-legendary Pokemon goes up, the Base total seems to go up slightly although with the cluster of points under 100 kg Pokemon, it is hard to conclude, and regardless, the correlation does not appear to be strong between these variables.

Note that from this graph we can tell that Legendary Pokemon appear to tend to have much higher base stat totals than non-legendary Pokemon on average, which is something that will definitely impact our multiple linear regression model.

# Methodology:

::: callout-important
Before you submit, make sure your code chunks are turned off with `echo: false` and there are no warnings or messages with `warning: false` and `message: false` in the YAML.
:::
